name: Deploy Javadoc

on:
  push:
    branches:
      - master
    tags:
      - '*'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  javadoc:
    concurrency: javadoc-publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK versions
        uses: actions/setup-java@v5
        with:
          java-version: |
            21
            8
            17
          distribution: 'zulu'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          validate-wrappers: true

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Generate Javadoc
        run: ./gradlew --no-daemon javadoc

      - name: Deploy ðŸš€
        id: deploy
        shell: bash
        run: |
          mv build/docs $RUNNER_TEMP/docs_output
          git clean -f -d -x
          git checkout gh-pages
          mkdir -p $TARGET_FOLDER
          rm -rf $TARGET_FOLDER
          mv $RUNNER_TEMP/docs_output $TARGET_FOLDER -v
          git add $TARGET_FOLDER
          if git diff --cached --exit-code > /dev/null ; then
            echo Nothing to deploy
            exit 0
          fi
          find . -name javadoc -type d -print | sed 's#^\./\(.*\)/javadoc$#\1#' | sort --version-sort --reverse > index.txt
          git add index.txt
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git commit -m "Deploy javadoc from ref $TARGET_FOLDER"
          git push
        env:
          TARGET_FOLDER: ${{ github.ref_name }}
          COMMIT_AUTHOR: ${{ github.event.push.pusher.name }}
          COMMIT_EMAIL: ${{ github.event.push.pusher.email }}
